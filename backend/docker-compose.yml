services:
  app:
    profiles:
      - development
    build:
      context: .
      dockerfile: Dockerfile.development
    ports:
      - "10000:10000"
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
      - ./logs:/app/logs
    env_file:
      - .env.development
    environment:
      - ENV=development
    depends_on:
      - db
    networks:
      - app-network

  app-prod:
    profiles:
      - production
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "10000:10000"
    env_file:
      - .env.production
    environment:
      - ENV=production
    depends_on:
      - db
    networks:
      - app-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
      - ./scripts/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env.development
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgresdb}
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgresdb}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis_data:/data
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-redis}
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    env_file:
      - .env.development
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  go-mod-cache:
    name: byrd_go_mod_cache
  redis_data:
    name: byrd_redis_data

networks:
  app-network:
    name: byrd_network
    driver: bridge
